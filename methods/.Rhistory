cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
const = (bary*M + (1-bary))
f0 = f/const
const = (bary*M + (1-bary))
bary = bary1
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 (1-bary) + f1 * bary)
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
D_M
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
bias
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
1+lin_term+quad_term
M = 4
## Setup for bias plots
f = 0.02
## Setup for bias plots
f = 0.10
M = 4
days = 1:365
FP = 0.01; FN = 0.15
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
## Setup for bias plots
f = 0.10
M = 4
days = 1:365
FP = 0.01; FN = 0.15
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
## Setup for bias plots
f = 0.10
M = 3
days = 1:365
FP = 0.01; FN = 0.15
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
## Setup for bias plots
f = 0.10
M = 3
days = 1:365
FP = 0.01; FN = 0.15
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
ymin = min(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
## Setup for bias plots
f = 0.10
M = 3.5
## Setup for bias plots
f = 0.02
M = 3.5
days = 1:365
FP = 0.01; FN = 0.20
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
ymin = min(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
png(filename = "C:/Users/wdem/Documents/GitHub/covid-umich/methods/figs/sir_rt_comparison.png",
width = 6.5, height = 4, units = "in", res = 1200, pointsize = 12)
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
dev.off()
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.8, 1.2), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
M = 4
## Setup for bias plots
f = 0.02
M = 4
days = 1:365
FP = 0.01; FN = 0.20
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
ymin = min(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.8, 1.2), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
par(mar = c(1.5,2,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
par(mar = c(1.5,1,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
par(mar = c(1,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
par(mar = c(1.5,3,0,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
ymin = min(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
png(filename = "C:/Users/wdem/Documents/GitHub/covid-umich/methods/figs/sir_rt_comparison.png",
width = 6.5, height = 4, units = "in", res = 1200, pointsize = 12)
par(mar = c(1.5,3,0,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
dev.off()
## Same curve, just different M value
M1 = 3; M2 = 4; M3 = 5
bias1 = bias_fn(M1, bary2, f)
bias2 = bias_fn(M2, bary2, f)
bias3 = bias_fn(M3, bary2, f)
ymax = max(bias3$r+bias3$bias)
ymin = min(bias3$r+bias3$bias)
plot(bias1$r, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n", xlab = "", ylab = "")
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r+bias2$bias, col = "blue", lty = 2)
lines(bias3$r+bias3$bias, col = "red", lty = 2)
bias1 = bias_fn(M1, bary2, f, FP, FN)
## Same curve, just different M value
M1 = 3; M2 = 4; M3 = 5
bias1 = bias_fn(M1, bary2, f, FP, FN)
bias2 = bias_fn(M2, bary2, f, FP, FN)
bias3 = bias_fn(M3, bary2, f, FP, FN)
ymax = max(bias3$r+bias3$bias)
bias3 = bias_fn(M3, bary2, f, FP=0, FN)
bias3 = bias_fn(M3, bary2, f, FP=0, FN=0)
ymax = max(bias3$r+bias3$bias)
ymin = min(bias3$r+bias3$bias)
plot(bias1$r, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n", xlab = "", ylab = "")
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r+bias2$bias, col = "blue", lty = 2)
lines(bias3$r+bias3$bias, col = "red", lty = 2)
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
legend(35, 3.0, legend = c("M=1", "M=2", "M=3", "M=4"), lty = c(1,2,2,2), col = c("black", "black", "blue", "red"), cex = 0.75, bty = "n")
ymax = max(bias3$Rt+bias3$logbias)
ymin = min(bias3$Rt+bias3$logbias)
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt+bias2$logbias, lty = 2, col = "blue")
lines(bias3$Rt+bias3$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
bias3 = bias_fn(M3, bary2, f, FP=0, FN=0.1)
bias3 = bias_fn(M3, bary2, f, FP=0.01, FN=0.1)
bias3 = bias_fn(M3, bary2, f, FP=0.01, FN=0.15)
bias3 = bias_fn(M3, bary2, f, FP=0.01, FN=0.12)
f = 0.02
M = 4
days = 1:365
FP = 0.01; FN = 0.10
bary1 = -diff(out1$S)
bary2 = -diff(out2$S)
bias_fn <- function(M, bary, f, FP = 0.01, FN = 0.15) {
const = (bary*M + (1-bary))
f0 = f/const
f1 = M*f0
Delta = f1 - f0
D_M = 1 + FP + FN - Delta * bary/(1-bary) * (FP*(1-bary) + FN * bary)/ (f0 * (1-bary) + f1 * bary)
rho = Delta*sqrt(bary*(1-bary))/sqrt(f*(1-f))
error = rho*sqrt((1-f)/f) * sqrt(1-bary)/sqrt(bary)*D_M
lag_error = error[1:(length(error)-1)]
cur_error = error[2:(length(error))]
lin_term = cur_error - lag_error
quad_term = lag_error^2 - cur_error*lag_error
cur_bary = bary[2:length(error)]
lag_bary = bary[1:(length(error)-1)]
bias = (lin_term+quad_term) * cur_bary/lag_bary
Rt = 1+log(cur_bary/lag_bary)/7
logbias = log(1+lin_term+quad_term)/7
return(list("r"=cur_bary/lag_bary, "bias" = bias,
"Rt"=Rt, "logbias"=logbias))
}
bias1 = bias_fn(M, bary1, f)
bias2 = bias_fn(M, bary2, f)
ymax = max(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
ymin = min(bias1$r+bias1$bias, bias1$r, bias2$r+bias2$bias, bias2$r)
plot(bias1$r, type = "l", ylim = c(ymin, ymax))
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r, col = "red")
lines(bias2$r+bias2$bias, col = "red", lty = 2)
ymax = max(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
ymin = min(bias1$Rt+bias1$logbias, bias1$Rt, bias2$Rt+bias2$logbias, bias2$Rt, na.rm = TRUE)
png(filename = "C:/Users/wdem/Documents/GitHub/covid-umich/methods/figs/sir_rt_comparison.png",
width = 6.5, height = 4, units = "in", res = 1200, pointsize = 12)
par(mar = c(1.5,3,0,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(0.7, 1.3), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt, lty = 1, col = "red")
lines(bias2$Rt+bias2$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75, at = seq(0.8,1.2,0.1))
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
dev.off()
## Same curve, just different M value
M1 = 3; M2 = 4; M3 = 5
bias1 = bias_fn(M1, bary2, f, FP, FN)
bias2 = bias_fn(M2, bary2, f, FP, FN)
bias3 = bias_fn(M3, bary2, f, FP, FN)
ymax = max(bias3$r+bias3$bias)
ymin = min(bias3$r+bias3$bias)
png(filename = "C:/Users/wdem/Documents/GitHub/covid-umich/methods/figs/sir_ratio.png",
width = 6.5, height = 4, units = "in", res = 1200, pointsize = 12)
plot(bias1$r, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n", xlab = "", ylab = "")
lines(bias1$r+bias1$bias, lty = 2)
lines(bias2$r+bias2$bias, col = "blue", lty = 2)
lines(bias3$r+bias3$bias, col = "red", lty = 2)
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
legend(35, 3.0, legend = c("M=1", "M=2", "M=3", "M=4"), lty = c(1,2,2,2), col = c("black", "black", "blue", "red"), cex = 0.75, bty = "n")
dev.off()
ymax = max(bias3$Rt+bias3$logbias)
ymin = min(bias3$Rt+bias3$logbias)
png(filename = "C:/Users/wdem/Documents/GitHub/covid-umich/methods/figs/sir_rt.png",
width = 6.5, height = 4, units = "in", res = 1200, pointsize = 12)
par(mar = c(1.5,3,1,1)+0.1)
plot(bias1$Rt, type = "l", ylim = c(ymin, ymax), axes = FALSE, bty = "n")
lines(bias1$Rt + bias1$logbias, lty = 2)
abline(h = 1.0, col = "grey", lty = 2)
lines(bias2$Rt+bias2$logbias, lty = 2, col = "blue")
lines(bias3$Rt+bias3$logbias, lty = 2, col = "red")
axis(side =1, labels = FALSE)
axis(side =2, cex.axis = 0.75)
mtext(expression(R[t]), side =2, line = 2, cex = 0.75)
legend(35, 1.175, legend = c("M=1", "M=2", "M=3", "M=4"), lty = c(1,2,2,2), col = c("black", "black", "blue", "red"), cex = 0.75, bty = "n")
dev.off()
